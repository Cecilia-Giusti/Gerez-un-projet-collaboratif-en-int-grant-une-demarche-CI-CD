name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Cecilia-Giusti_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
        working-directory: ./back
      

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11 for backend tests
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Run backend tests
        run: mvn test
        working-directory: ./back
      - name: Generate backend coverage report
        run: mvn jacoco:report
        working-directory: ./back
      - name: Upload backend coverage report
        uses: actions/upload-artifact@v2
        with:
          name: backend-coverage-report
          path: back/target/site/jacoco/
      - name: Set up Node.js for frontend tests
        uses: actions/setup-node@v2
        with:
          node-version: '18.13'
      - name: Install Angular CLI
        run: npm install -g @angular/cli
      - name: Install frontend dependencies
        run: npm install
        working-directory: ./front
      - name: Run frontend tests
        run: ng test --watch=false --browsers=ChromeHeadless
        working-directory: ./front
