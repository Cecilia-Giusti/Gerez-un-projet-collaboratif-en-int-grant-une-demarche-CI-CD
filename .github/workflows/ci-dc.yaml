name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  prepare:
    name: Prepare Environment
    runs-on: ubuntu-latest
    outputs:
      node-cache-key: ${{ steps.cache-node.outputs.key }}
      maven-cache-key: ${{ steps.cache-maven.outputs.key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.13'
        id: node-setup

      - name: Cache Node modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: ./front/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'
      
      - name: Cache Maven packages
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

  frontend:
    name: Build and Test Frontend
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Load Node modules from Cache
        uses: actions/cache@v2
        with:
          path: ./front/node_modules
          key: ${{ needs.prepare.outputs.node-cache-key }}
      
      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./front

      - name: Run tests and generate coverage
        run: ng test --watch=false --browsers=ChromeHeadless --code-coverage
        working-directory: ./front

      - name: Build and push Docker image (Frontend)
        uses: docker/build-push-action@v2
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: cecigiu2b/bobapp:front-latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}

  backend:
    name: Build and Test Backend
    needs: prepare
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Load Maven packages from Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ needs.prepare.outputs.maven-cache-key }}

      - name: Build and analyze (Backend)
        run: mvn -B verify
        working-directory: ./back
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build and push Docker image (Backend)
        uses: docker/build-push-action@v2
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: cecigiu2b/bobapp:back-latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_TOKEN }}
