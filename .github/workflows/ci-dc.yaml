name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.13'

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Install frontend dependencies
        run: npm install
        working-directory: ./front

      - name: Run tests and reports
        run: ng test --watch=false --browsers=ChromeHeadless --code-coverage
        working-directory: ./front

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Build and analyze (Back-End)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify
        working-directory: ./back

      - name: Cache SonarCloud packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-cache-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-sonar-cache-

      - name: Cache Node modules
        uses: actions/cache@v2
        with:
          path: ./front/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-modules-

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image (Front-End)
        uses: docker/build-push-action@v2
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: bobapp/front-app:latest
      
      - name: Build and push Docker image (Back-End)
        uses: docker/build-push-action@v2
        with:
          context: ./back
          file: ./back/Dockerfile
          push: true
          tags: bobapp/back-app:latest
